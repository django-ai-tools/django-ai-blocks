# Generated by Django 5.2.7 on 2025-10-27 22:51

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Pollutant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "external_id",
                    models.CharField(
                        help_text="Identifier from the upstream data source.",
                        max_length=64,
                        unique=True,
                        verbose_name="external ID",
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        help_text="Typical unit, e.g. µg/m³ or ppm.",
                        max_length=32,
                        verbose_name="measurement unit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pollutant",
                "verbose_name_plural": "Pollutants",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "external_id",
                    models.CharField(
                        help_text="Identifier from the upstream data source.",
                        max_length=64,
                        unique=True,
                        verbose_name="external ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Region",
                "verbose_name_plural": "Regions",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="MonitoringSite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "external_id",
                    models.CharField(
                        help_text="Identifier from the upstream data source.",
                        max_length=64,
                        unique=True,
                        verbose_name="external ID",
                    ),
                ),
                (
                    "location_description",
                    models.TextField(
                        blank=True,
                        help_text="Optional human readable description of the site's location.",
                        verbose_name="location description",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sites",
                        to="air_quality.region",
                        verbose_name="region",
                    ),
                ),
            ],
            options={
                "verbose_name": "Monitoring site",
                "verbose_name_plural": "Monitoring sites",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measured_at",
                    models.DateTimeField(
                        db_index=True,
                        help_text="Timestamp provided by the upstream data source.",
                        verbose_name="measured at",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Numeric value recorded for the pollutant.",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="value",
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        help_text="Identifier from the upstream data source.",
                        max_length=64,
                        unique=True,
                        verbose_name="external ID",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="air_quality.monitoringsite",
                        verbose_name="monitoring site",
                    ),
                ),
                (
                    "pollutant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="air_quality.pollutant",
                        verbose_name="pollutant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Measurement",
                "verbose_name_plural": "Measurements",
                "ordering": ("-measured_at",),
                "constraints": [
                    models.UniqueConstraint(
                        fields=("site", "pollutant", "measured_at"),
                        name="unique_measurement_per_site_pollutant_timestamp",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="SiteAlertRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "external_id",
                    models.CharField(
                        help_text="Identifier from the upstream data source.",
                        max_length=64,
                        unique=True,
                        verbose_name="external ID",
                    ),
                ),
                (
                    "threshold_value",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="threshold value",
                    ),
                ),
                (
                    "comparison",
                    models.CharField(
                        choices=[
                            ("above", "Above or equal to threshold"),
                            ("below", "Below or equal to threshold"),
                        ],
                        default="above",
                        max_length=8,
                        verbose_name="comparison",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "pollutant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alert_rules",
                        to="air_quality.pollutant",
                        verbose_name="pollutant",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alert_rules",
                        to="air_quality.monitoringsite",
                        verbose_name="monitoring site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Site alert rule",
                "verbose_name_plural": "Site alert rules",
                "ordering": ("name",),
                "constraints": [
                    models.UniqueConstraint(
                        fields=("site", "pollutant", "name"),
                        name="unique_alert_rule_per_site_pollutant_name",
                    )
                ],
            },
        ),
    ]
